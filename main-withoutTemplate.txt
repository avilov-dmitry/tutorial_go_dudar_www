package main1

// import (
// 	"fmt"
// 	"net/http"
// )

// type User1 struct {
// 	name       string
// 	age        uint16
// 	money      int16
// 	avg_grades float64
// 	happiness  float64
// }

// func (u User) getAllInfo1() string {
// 	return fmt.Sprintf("User name is: %s. "+
// 		"He is %d and he had money equal: %d", u.name, u.age, u.money)
// }

// // User - копирует объект
// // *User - передает объект по ссылке

// func (u *User) setNewName1(newName string) {
// 	u.name = newName
// }

// func home_page1(w http.ResponseWriter, r *http.Request) {
// 	bob := User{"Bob", 25, -50, 4.2, 0.8}

// 	bob.name = "Alex2"

// 	bob.setNewName("Alex") // если передавать НЕ по ссылке, то изменится копия и getAllInfo не увидит изменения

// 	fmt.Fprintf(w, bob.getAllInfo())
// }

// func contacts_page1(w http.ResponseWriter, r *http.Request) {
// 	fmt.Fprint(w, "Contacts page!")
// }

// func handleRequest1() {
// 	http.HandleFunc("/", home_page)
// 	http.HandleFunc("/contacts", contacts_page)
// 	http.ListenAndServe(":8888", nil)
// }

func main1() {
	// var bob User = ... // первый вариант создания объекта
	// bob := User{name: "Bob", age: 25, money: -50, avg_grades: 4.2, happiness: 0.8}

	// handleRequest()
}
